@page "/addpost"

@using DevBlog_BlazorServer.Models
@using Microsoft.Extensions.Configuration
@using System.IO
@using Microsoft.AspNetCore.Http
@using Dropbox.Api;
@using Dropbox.Api.Files

@inject DataLibrary.Interfaces.IDataAccess _data
@inject IConfiguration _config

<h3>AddPost</h3>

<EditForm Model=@newPost OnValidSubmit=InsertData>
    <InputText @bind-Value=newPost.UpdateNum />
    <InputTextArea @bind-Value=newPost.Description />
    <InputText @bind-Value=name />
    <InputFile OnChange=HandleFileInput />
    <button type="submit">Add Post</button>
</EditForm>

@code {
    PostModel newPost;
    string name;
    IBrowserFile file;
    Stream fs;

    protected override async Task OnInitializedAsync()
    {
        newPost = new PostModel();
    }

    private async Task HandleFileInput(InputFileChangeEventArgs e)
    {
        file = e.File;
        fs = file.OpenReadStream();
    }

    private async Task InsertData()
    {
        // Add image to Dropbox
        string url = await _data.AddImgToDropBox(fs, name);

        string sql = "INSERT INTO post" +
                     "(UpdateNum, Date, ImgURL, Description, DownVotes, UpVotes)" +
                     "values (@UpdateNum, @Date, @ImgURL, @Description, @DownVotes, @UpVotes);";

        // Post to DB
        await _data.SaveData(sql, new
        {
            UpdateNum = newPost.UpdateNum,
            Date = DateTime.Now,
            ImgURL = url,
            Description = newPost.Description,
            DownVotes = 0,
            UpVotes = 0
        }, _config.GetConnectionString("DevBlogDB"));

        newPost = new PostModel();
        await OnInitializedAsync();
    }
}