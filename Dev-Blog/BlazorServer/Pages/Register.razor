@page "/register"

@using System.ComponentModel.DataAnnotations;

<h3>Register</h3>

<EditForm Model=registerVM>
    <form method="post" action="/signup">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputText @bind-Value=registerVM.UserName />
        <InputText @bind-Value=registerVM.Password type="password" />
        <InputText @bind-Value=registerVM.ConfirmPassword type="password" />
        <InputText @bind-Value=registerVM.Email type="email" />

        <input type="text" name="username" value=@registerVM.UserName hidden />
        <input type="password" name="password" value=@registerVM.Password hidden />
        <input type="password" name="confirmpassword" value=@registerVM.ConfirmPassword hidden />
        <input type="email" name="email" value=@registerVM.Email hidden />

        <input type="submit" value="Sign Up" />
    </form>
</EditForm>

@code {
    RegisterVM registerVM;

    protected override async Task OnInitializedAsync()
    {
        registerVM = new RegisterVM();
    }

    public class RegisterVM
    {
        [Required]
        [StringLength(25)]
        public string UserName { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [StringLength(35)]
        public string Password { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [Compare("Password")]
        [StringLength(35)]
        public string ConfirmPassword { get; set; }

        [Required]
        [EmailAddress]
        [RegularExpression("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$", ErrorMessage = "Please enter a correct email address")]
        public string Email { get; set; }
    }
}