// <auto-generated />
using System;
using Dev_Blog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dev_Blog.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210407155920_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Dev_Blog.Models.CommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PostModelId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PostModelId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Dev_Blog.Models.DownVoteModel", b =>
                {
                    b.Property<int>("PostModelId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("PostModelId", "UserName");

                    b.ToTable("DownVote");
                });

            modelBuilder.Entity("Dev_Blog.Models.PostModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImgURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UpdateNum")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Dev_Blog.Models.UpVoteModel", b =>
                {
                    b.Property<int>("PostModelId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("PostModelId", "UserName");

                    b.ToTable("UpVote");
                });

            modelBuilder.Entity("Dev_Blog.Models.CommentModel", b =>
                {
                    b.HasOne("Dev_Blog.Models.PostModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("PostModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dev_Blog.Models.DownVoteModel", b =>
                {
                    b.HasOne("Dev_Blog.Models.PostModel", null)
                        .WithMany("DownVotes")
                        .HasForeignKey("PostModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dev_Blog.Models.UpVoteModel", b =>
                {
                    b.HasOne("Dev_Blog.Models.PostModel", null)
                        .WithMany("UpVotes")
                        .HasForeignKey("PostModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dev_Blog.Models.PostModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DownVotes");

                    b.Navigation("UpVotes");
                });
#pragma warning restore 612, 618
        }
    }
}
